<?phpclass SiteController extends Controller{	public $layout='//frontend/main';                public function filters()	{		return array(			'accessControl', // perform access control for CRUD operations		);	}                /**	 * Specifies the access control rules.	 * This method is used by the 'accessControl' filter.	 * @return array access control rules	 */	public function accessRules()	{            return array(                                array('allow',  // разрешаем неавторизованным пользователям доступ к странице логина и капче                        'actions'=>array('index', 'about', 'login', 'logout', 'captcha','error', 'contacts', 'partners', 'lp', 'konsultaciya_yurista_advokata', 'clearCache', 'offer', 'crm', 'lead', 'goryachaya_liniya',),                        'users'=>array('*'),                ),                array('deny',  // запрещаем все, что не разрешено                        'users'=>array('*'),                ),            );	}                		public function actions()	{		return array(                    // captcha action renders the CAPTCHA image displayed on the contact page                    'captcha'=>array(                            'class'=>'CCaptchaAction',                            'backColor'=>0xFFFFFF,                    ),                    // page action renders "static" pages stored under 'protected/views/site/pages'                    // They can be accessed via: index.php?r=site/page&view=FileName                    'page'=>array(                            'class'=>'CViewAction',                    ),		);	}	/**	 * This is the action to handle external exceptions.	 */	public function actionError()	{	    if($error=Yii::app()->errorHandler->error){	    	if(Yii::app()->request->isAjaxRequest){                    echo  $error['message'];                } else {                    $this->render('error', $error);                }	    }	}        // главная страница системы        public function actionIndex()	{            $questions = Yii::app()->db->cache(600)->createCommand()                    ->select('q.id id, q.publishDate date, q.title title, COUNT(*) counter')                    ->from('{{question}} q')                    ->leftJoin('{{answer}} a', 'q.id=a.questionId')                    ->group('q.id')                    ->where('(q.status=:status1 OR q.status=:status2) AND a.id IS NOT NULL', array(':status1'=>  Question::STATUS_PUBLISHED, ':status2'=>  Question::STATUS_CHECK))                    ->limit(5)                    ->order('q.publishDate DESC')                    ->queryAll();                        $questionModel = new Question();            $this->render('index',array(                    'questions'     =>  $questions,                    'questionModel' =>  $questionModel,            ));	}                public function actionContacts()        {            $this->render('contacts');        }                public function actionPartners()        {            $this->render('partners');        }                public function actionKonsultaciya_yurista_advokata()        {            $this->render('konsultaciya_yurista_advokata');        }                public function actionOffer()        {            $this->render('offer');        }		                public function actionCrm()        {            $this->render('crm');        }                 public function actionAbout()        {            $this->render('about');        }                 public function actionLead()        {            $this->render('lead');        }        public function actionGoryachaya_liniya()        {            $this->render('goryachaya_liniya');        }		        public function actionLogin()	{            $model=new LoginForm;            // если использовался вход по мейлу и паролю            if(isset($_POST['LoginForm']))            {                $model->attributes=$_POST['LoginForm'];                // validate user input and redirect to the previous page if valid                if($model->validate() && $model->login()) {                    if(Yii::app()->user->checkAccess(User::ROLE_EDITOR)) {                        // контент-менеджера и админа сразу перекидываем в админку                        $this->redirect('/admin');                    } elseif(Yii::app()->user->role == User::ROLE_BUYER) {                        // покупателя сразу перекидываем в кабинет                        $this->redirect('/cabinet');                    } else {                        $this->redirect('/site');                    }                                    }            }            // display the login form            $this->render('login',array(                'model'             =>  $model,                ));	}                public function actionLogout()	{            Yii::app()->user->logout();            $this->redirect(Yii::app()->homeUrl);	}                public function actionClearCache()	{            if(Yii::app()->cache->flush()) echo "1";            else echo "0";	}                        public function actionLp()        {            $this->layout='//frontend/short';                                    $this->render('lp',array(                           ));                    }}