<?php/** * Класс для работы с данными текущего залогиненного пользователя */class WebUser extends CWebUser {    private $_model = null;    public $allowAutoLogin = true;    public $authTimeout = 1000000;    public $cacheTime = 60; // время кеширования информации о текущем пользователе    /**     * Возвращает объект класса User, соответствующий залогиненному пользователю     * @return User Объект класса User     */    private function getModel()    {        if (!$this->isGuest && $this->_model === null) {            $this->_model = User::model()->cache($this->cacheTime)->findByPk($this->id);        }        return $this->_model;    }	    public function getRole()    {        if($user = $this->getModel()) {            return $user->role;        }    }    public function getRoleName()    {        if($user = $this->getModel()) {            return $user->getRoleName();        }    }    public function getName()    {        if($user = $this->getModel()){            return $user->name;        }    }    public function getName2()    {        if($user = $this->getModel()){            return $user->name2;        }    }    public function getLastName()    {        if($user = $this->getModel()){            return $user->lastName;        }    }    public function getShortName()    {        if($user = $this->getModel()){            return $user->getShortName();        }    }    public function getEmail()    {        if($user = $this->getModel()) {            return $user->email;        }    }     public function getSourceId()    {        if($user = $this->getModel()) {            return $user->leadSourceId;        }    }     public function getOfficeId()    {        if($user = $this->getModel()) {            return $user->officeId;        }    }     public function getLogin()    {        if($user = $this->getModel()) {            return $user->login;        }    }    public function getTownId()    {        if($user = $this->getModel()) {            return $user->townId;        }    }    public function getIsVerified()    {        if($user = $this->getModel()) {            return $user->settings->isVerified;        }    }    public function getAvatarUrl()    {        if($user = $this->getModel()) {            return $user->getAvatarUrl();        }    }    public function getAvatar()    {        if($user = $this->getModel()) {            return $user->avatar;        }    }    public function getKarma()    {        if($user = $this->getModel()) {            return $user->karma;        }    }        public function getBalance()    {        if($user = $this->getModel()) {            return $user->balance;        }    }    /**     * Возвращает массив категорий вопросов, на которых специализируется пользователь (юрист)     *      * @return array массив категорий     */    public function getCategories()    {        if($user = $this->getModel()) {            return $user->categories;        }    }        /**     * Возвращает объект настроек юриста, относящийся к текущему пользователю     *      * @return YuristSettings     */    public function getSettings()    {        if($user = $this->getModel()) {            return $user->settings;        }    }        }?>